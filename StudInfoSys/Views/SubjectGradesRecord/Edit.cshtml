@model StudInfoSys.ViewModels.SubjectGradesRecordViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit grade record of @Model.StudentFullName</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    

    <fieldset>
        <legend>SubjectGradesRecord</legend>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RegistrationId)

        @*<div class="editor-label">
            @Html.LabelFor(model => model.SubjectId, "Subject")
        </div>
        <div class="editor-field">
            @Html.DropDownList("SubjectId", String.Empty)
            @Html.ValidationMessageFor(model => model.SubjectId)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.SubjectId, "Subject")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubjectId, Model.SubjectsList, "Select...")
            @Html.ValidationMessageFor(model => model.SubjectId)
        </div>



        <div id="grades-list" class="editor-label">        

        @{
            foreach (var grade in Model.GradeViewModels)
            {
                @Html.Partial("_CreateGradeViewModels", grade); //NOTE: you have to use @           
            }
        }
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.RegistrationId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
